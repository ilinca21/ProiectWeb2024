@{
    ViewBag.Title = "AddUser";
    Layout = "~/Views/Shared/_LayoutCases.cshtml";
}

@model proiect.Models.User.ModelNewUser
<div class="formbold-main-wrapper">
    <div class="formbold-form-wrapper">
        <form method="POST">
            @using (Html.BeginForm("AddUser", "Admin", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <div class="formbold-input-wrapp formbold-mb-3">
                    <label for="username" class="formbold-form-label">Nume de utilizator</label>
                    <div>
                        @Html.TextBoxFor(model => model.Credential, new { @class = "formbold-form-input", placeholder = "Nume", maxlength = "30" })
                        @Html.ValidationMessageFor(model => model.Credential, "", new { @class = "text-danger" })

                    </div>
                </div>
                <div class="formbold-mb-3">
                    <label for="email" class="formbold-form-label">Email</label>
                    @Html.TextBoxFor(model => model.Email, new { @class = "formbold-form-input", placeholder = "Email" })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>

                <div class="formbold-mb-3">
                    <label for="password" class="formbold-form-label">Parola</label>
                    @Html.TextBoxFor(model => model.Password, new { @class = "formbold-form-input", type = "password", placeholder = "Parola", maxlength = "40" })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>

                <div class="formbold-mb-3">
                    <label for="confirm password" class="formbold-form-label">Confirmă parola</label>
                    @Html.TextBoxFor(model => model.ConfirmPassword, new { @class = "formbold-form-input", type = "password", placeholder = "Parola", maxlength = "40" })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
                <div class="formbold-mb-3">
                    <label for="phone" class="formbold-form-label">Număr de telefon</label>
                    @Html.TextBoxFor(model => model.PhoneNumber, new { @class = "formbold-form-input", type = "phone", placeholder = "061111111", maxlength = "40" })
                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                </div>

                <div class="formbold-mb-3">
                    <label for="country" class="formbold-form-label">Țara</label>
                    @Html.TextBoxFor(model => model.Country, new { @class = "formbold-form-input", type = "country", placeholder = "Moldova", maxlength = "40" })
                    @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                </div>

                <div class="formbold-mb-3">
                    <label class="formbold-form-label">Nivelul de acces</label>
                    @Html.DropDownListFor(model => model.Level, new SelectList(new List<string> { "User", "Admin" }), new { @class = "formbold-form-input" })
                    @Html.ValidationMessageFor(model => model.Level, "", new { @class = "text-danger" })
                </div>

                <button type="submit" class="formbold-btn">Adauga utilizator</button>
            }
            @if (ViewData["ConfirmationMessage"] != null)
            {
                <div class="alert alert-success">
                    @ViewData["ConfirmationMessage"]
                </div>
            }
        </form>
    </div>
</div>
<style>
    body {
        font-family: 'Inter', sans-serif;
        color: black; 
    }

    .formbold-btn {
        font-size: 16px;
        border-radius: 5px;
        padding: 14px 25px;
        border: none;
        font-weight: 500;
        background-color: #ff0000; 
        color: white; 
        cursor: pointer;
        margin-top: 25px;
    }

    .formbold-btn:hover {
        box-shadow: 0px 3px 8px rgba(0, 0, 0, 0.05);
    }
    .formbold-form-wrapper {
        margin: 0 auto;
        max-width: 450px;
        width: 100%;
        background: white;
        padding: 20px;
    }

    /* Add margin-bottom to create space between cases */
    .formbold-mb-3 {
        margin-bottom: 20px;
    }
    .formbold-form-wrapper {
        margin: 0 auto;
        max-width: 570px;
        width: 100%;
        background: white;
        padding: 40px;
    }

    .formbold-form-label {
        display: block; 
        margin-bottom: 5px; 
    }

    .formbold-form-input {
        width: 100%;
        padding: 8px;
        border-radius: 5px;
        border: 1px solid #dde3ec;
        background: #ffffff;
        font-weight: 500;
        font-size: 14px;
    }
    .formbold-form-label {
        display: block; 
        margin-bottom: 5px; 
    }
    .formbold-btn {
        font-size: 14px; 
        padding: 12px 20px; 
        border-radius: 5px;
        border: none;
        font-weight: 500;
        background-color: #ff0000;
        color: white;
        cursor: pointer;
        margin-top: 15px; 
    }
</style>


